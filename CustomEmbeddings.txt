from typing import List
import numpy as np
from langchain.embeddings.base import Embeddings
from models.my_model import TextEmbeddingModel  # 你的原始模型

class CustomEmbeddings(Embeddings):
    """LangChain兼容的嵌入模型封装"""
    
    def __init__(self, model_name: str):
        self.model = TextEmbeddingModel.from_pretrained(model_name)
    
    def embed_documents(self, texts: List[str]) -> List[List[float]]:
        """批量文档嵌入"""
        try:
            vectors = self.model.get_embeddings(texts)
            return self._ensure_float_vectors(vectors)
        except Exception as e:
            raise RuntimeError(f"文档嵌入失败: {str(e)}")
    
    def embed_query(self, text: str) -> List[float]:
        """单条查询嵌入"""
        return self.embed_documents([text])[0]
    
    @staticmethod
    def _ensure_float_vectors(vectors) -> List[List[float]]:
        """确保输出为List[List[float]]"""
        if isinstance(vectors, np.ndarray):
            return vectors.tolist()
        return [vec.tolist() if hasattr(vec, 'tolist') else list(map(float, vec)) 
                for vec in vectors]