from typing import Union
from langchain.embeddings.base import Embeddings

class FAISSManager:
    def __init__(self, embeddings: Union[Embeddings, Callable]):
        # 类型检查增强
        if not (isinstance(embeddings, Embeddings) or callable(embeddings)):
            raise TypeError(
                f"需传入Embeddings实例或可调用对象，得到 {type(embeddings)}"
                "\n提示：确认CustomEmbeddings继承自langchain.embeddings.base.Embeddings"
            )
        
        if isinstance(embeddings, Embeddings):
            self.embeddings = embeddings
        else:
            from embeddings.adapters import FunctionAsEmbedding
            self.embeddings = FunctionAsEmbedding(embeddings)